pid /run/nginx/nginx.pid;

worker_processes auto; # Automatically detect the number of CPU cores [the number of worker processes should be equal to the number of cores]

error_log /var/log/nginx/error.log warn; # 'warn' is the log level

events {
    worker_connections 1024; # Maximum number of simultaneous connections per worker process
}

http {
    include             mime.types; # Helps NGINX recognize file types based on extensions
    access_log          /var/log/nginx/access.log; # Stores HTTP requests for debugging and analytics

    server {
        listen              443 ssl;

        ssl_certificate     ${CERTS_DIR}/${FQDN}.crt;
        ssl_certificate_key ${KEYS_DIR}/${FQDN}.key;
        ssl_protocols       TLSv1.2 TLSv1.3; # Enforce strong TLS versions for security

        server_name         ${FQDN}; # The domain name or IP address that this server block handles
        root                ${WP_ROOT}; # The root directory for serving files
        index               index.php index.html; # Default files to serve when a directory is accessed

        location / {
            try_files $uri $uri/ /index.php?is_args$args; # Attempt to serve files, fallback to PHP handler
        }

        # Wordpress
        location ~ \.php$ {
            fastcgi_pass wordpress:9000; # Forward PHP requests to the FastCGI server
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # Define script filename
            include fastcgi_params; # Include default FastCGI settings
        }

        # [Bonus] Adminer
        location ~ ^/adminer(/.*$|$) {
            fastcgi_pass adminer:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME ${ADMINER_ROOT}/index.php;
            include fastcgi_params;
        }

        # Block Access to Sensitive Files
        location ~ /\.ht {
            deny all; # Prevent access to hidden files like .htaccess, which could expose sensitive data
        }
    }

    # [Bonus] Static website
    server {
        listen 443 ssl;
        server_name ${STATIC_WEBSITE_FQDN};

        ssl_certificate ${CERTS_DIR}/${STATIC_WEBSITE_FQDN}.crt;
        ssl_certificate_key ${KEYS_DIR}/${STATIC_WEBSITE_FQDN}.key;

        location / {
            proxy_pass http://static_website:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }

}
